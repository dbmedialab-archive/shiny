import PropTypes from 'prop-types';

export const themePropTypes = {
	name: PropTypes.string.isRequired,
	global: PropTypes.string,
	colors: PropTypes.shape({
		blue: PropTypes.string,
		blueDark: PropTypes.string,
		blueLight: PropTypes.string,
		blueLighter: PropTypes.string,
		brown: PropTypes.string,
		brownDark: PropTypes.string,
		brownLight: PropTypes.string,
		brownLighter: PropTypes.string,
		burgundy: PropTypes.string,
		burgundyDark: PropTypes.string,
		burgundyLight: PropTypes.string,
		burgundyLighter: PropTypes.string,
		button: PropTypes.shape({
			background: PropTypes.string,
			color: PropTypes.string,
		}),
		darkness: PropTypes.string,
		darknessDark: PropTypes.string,
		darknessLight: PropTypes.string,
		darknessLighter: PropTypes.string,
		grayTint: PropTypes.string,
		grayTintDark: PropTypes.string,
		grayTintLight: PropTypes.string,
		grayTintLightDark: PropTypes.string,
		grayTintLighter: PropTypes.string,
		green: PropTypes.string,
		greenDark: PropTypes.string,
		greenLight: PropTypes.string,
		greenLighter: PropTypes.string,
		link: PropTypes.string,
		navy: PropTypes.string,
		navyDark: PropTypes.string,
		navyLight: PropTypes.string,
		navyLighter: PropTypes.string,
		orange: PropTypes.string,
		orangeDark: PropTypes.string,
		orangeLight: PropTypes.string,
		orangeLighter: PropTypes.string,
		pink: PropTypes.string,
		pinkDark: PropTypes.string,
		pinkLight: PropTypes.string,
		pinkLighter: PropTypes.string,
		primary: PropTypes.string,
		primaryDark: PropTypes.string,
		primaryLight: PropTypes.string,
		primaryLighter: PropTypes.string,
		purple: PropTypes.string,
		purpleDark: PropTypes.string,
		purpleLight: PropTypes.string,
		purpleLighter: PropTypes.string,
		sand: PropTypes.string,
		sandDark: PropTypes.string,
		sandLight: PropTypes.string,
		sandLighter: PropTypes.string,
		secondary: PropTypes.string,
		secondaryDark: PropTypes.string,
		secondaryLight: PropTypes.string,
		secondaryLighter: PropTypes.string,
		teal: PropTypes.string,
		tealDark: PropTypes.string,
		tealLight: PropTypes.string,
		tealLighter: PropTypes.string,
		transparent: PropTypes.string,
		type: PropTypes.string,
		typeDisabled: PropTypes.string,
		typeLight: PropTypes.string,
		white: PropTypes.string,
		whiteDark: PropTypes.string,
		whiteLight: PropTypes.string,
		whiteLighter: PropTypes.string,
		yellow: PropTypes.string,
		yellowDark: PropTypes.string,
		yellowLight: PropTypes.string,
		yellowLighter: PropTypes.string,
		black: PropTypes.string,

		skinColors: PropTypes.shape({
			adWrapperBackgroundColor: PropTypes.string,
			adWrapperColor: PropTypes.string,
			adWrapperFontColor: PropTypes.string,
			anbefalt: PropTypes.string,
			bolig: PropTypes.string,
			calmBackground: PropTypes.string,
			calmBorder: PropTypes.string,
			calmText: PropTypes.string,
			helse: PropTypes.string,
			mat: PropTypes.string,
			meninger: PropTypes.string,
			motor: PropTypes.string,
			nativeAd: PropTypes.string,
			primary: PropTypes.string,
			redaksjonenanbefaler: PropTypes.string,
			reise: PropTypes.string,
			secondary: PropTypes.string,
			solBlue: PropTypes.string,
			solRed: PropTypes.string,
			splashBackground: PropTypes.string,
			splashBorder: PropTypes.string,
			splashText: PropTypes.string,
			sport: PropTypes.string,
			transparent: PropTypes.string,
			underholdning: PropTypes.string,
		}),
	}),
	variables: PropTypes.shape({
		adWrapperCase: PropTypes.string,
		headingHugeLineHeight: PropTypes.string,
		headingHugeSize: PropTypes.string,
		headingLargeLineHeight: PropTypes.string,
		headingLargeSize: PropTypes.string,
		headingMediumLineHeight: PropTypes.string,
		headingMediumSize: PropTypes.string,
		headingRegularLineHeight: PropTypes.string,
		headingRegularSize: PropTypes.string,
		headingSmallLineHeight: PropTypes.string,
		headingSmallSize: PropTypes.string,
		headingXlargeLineHeight: PropTypes.string,
		headingXlargeSize: PropTypes.string,
		headingsFont: PropTypes.string,
		horizontalBase: PropTypes.string,
		largeWidth: PropTypes.string,
		mainFont: PropTypes.string,
		uiRegularLineHeight: PropTypes.string,
		uiRegularSize: PropTypes.string,
		uiSmallLineHeight: PropTypes.string,
		uiSmallSize: PropTypes.string,
		uiTinyLineHeight: PropTypes.string,
		uiTinySize: PropTypes.string,
		verticalBase: PropTypes.string,

		uiWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900]),
		uiWeightSemiBold: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900]),
		uiWeightBold: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900]),
		headingsWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900]),

		unitlessHorizontalBase: PropTypes.number,
		unitlessVerticalBase: PropTypes.number,
	}),
	flexboxgrid: PropTypes.shape({
		breakpoints: PropTypes.shape({
			lg: PropTypes.number,
			md: PropTypes.number,
			sm: PropTypes.number,
			xs: PropTypes.number,
		}),
		container: PropTypes.shape({
			lg: PropTypes.number,
			md: PropTypes.number,
			sm: PropTypes.number,
		}),
		gridSize: PropTypes.number,
		gutterWidth: PropTypes.number,
		mediaQuery: PropTypes.string,
		outerMargin: PropTypes.number,
	}),
};
